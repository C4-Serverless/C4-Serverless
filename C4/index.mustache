<!DOCTYPE HTML>

<html>
<head>
<script src="https://d3js.org/d3.v4.js"></script>

<style>

body {
  background-color: #f2f2f2;
}

.line {
  fill: none;
  stroke: blue;
  stroke-width: 2px;
}

.hide {
   display:none;
}


.dot {
  stroke: #000;
}

tr:nth-child(even) {
  background-color: white;
}

html {
  height: 100%;
}

body {
  height: 100%;
  margin: 0px;
}
.menu {
  background-color: lightgray;
  float: left;
  width: 20%;
  height: 100%;
  border: 1px solid darkgray;
}

.menu button {
  text-align: left;
  cursor: pointer;
  transition: 0.3s;
  font-size: 22px;
  color: black;
  padding: 18px 12px;
  width: 100%;
  background-color: inherit;
  transition: 0.3s;
}

.menu-links {
  float: left;
  padding: 0px 12px;
  border: 1px solid #ccc;
  width: 70%;
}

.tags, .functions {
  width: 100%;
  font-size: 18px;
  padding: 1%;
}

.menu button:hover {
    background-color: #ddd;
}

.menu button.active {
    background-color: #ccc;
}
.p {
    float: right;
}

.content {
    float: left;
    padding: 0px 12px;
    border: 1px solid #ccc;
    width: 75%;
    border-left: none;
    height: 100%;
}

#info-graph{
  width:90%;
  height: 1500px;
  margin:auto;
}

.tagFunction {
  background-color: white;
  color: black;
  width: 100%;
  font-size: 18px;
  text-align: left;
  padding: 1%;
}

</style>
</head>
<body>

  <div class="menu"> 
    <button class="menu-links" onclick="opn(event, 'tagsOnly')">Tags</button>
    <button class="menu-links" onclick="opn(event, 'div-func')">Functions</button>
  </div>

  <div class="content" id="tagsOnly">
    <h3>
        {{#tagsArray}}
          {{{.}}}
        {{/tagsArray}}
    </h3>
  </div>

  <div class="content hide" id="div-func">
    <h3> 
        {{#function}}
          {{{.}}}
        {{/function}}
    </h3>
  </div> 
  
  <div class="content hide" id="timeAndDuration">
    <h3>
        {{#timeAndDuration}}
          {{{.}}}
        {{/timeAndDuration}}
    </h3>

  </div>

<<<<<<< HEAD
    <div id="rawTimeDurationData" style="display:none">{{rawTimeDurationData}}</div>
=======
    <div id="functionRawData">{{rawTimeDurationDate}}</div>
>>>>>>> 57db490f7b8952f0f483b5462ae0a6803957c89b
    <div id="info-graph" ></div>



<script id="template" type="x-tmpl-mustache">
</script>

<script>
//D3 data visualizations
d3.selectAll("h3").style("color", "purple");

var testData = [
  {date: new Date(2010, 0 ,1), duration: 1},
  {date: new Date(2011, 0 ,1), duration: 12},
  {date: new Date(2012, 0 ,1), duration: 23},
  {date: new Date(2014, 0 ,1), duration: 3},
  {date: new Date(2016, 0 ,1), duration: 9},
]

var margin = {top:20, right: 10, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseTime = d3.timeParse("%d-%b-%y");

var x = d3.scaleTime()
  .domain([new Date(2012,0,1), new Date(2015,0,1)])
	.range([0, 700]);

var y = d3.scaleLinear().range([height, 0]);

var valueLine = d3.line()
    .x(function(d) {return x(d.date)})
    .y(function(d) {return y(d.duration)})


var svg = d3.select("#info-graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

function draw(){
  var data = testData;

  data.forEach((d) => {
    d.date = d.date;
    d.duration = +d.duration;
  })

   x.domain([0, d3.max(data, function(d) {return d.date; })]);
   y.domain([0, d3.max(data, function(d) {return d.duration; })]);
      

  // Add the valueline path.
  //svg.append("path")
    //  .data(data)
      //.attr("class", "line")
      //.attr("d", valueLine);

  // Add the X Axis
  svg.append("g")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));

  // Add the Y Axis
  svg.append("g")
      .call(d3.axisLeft(y));
  }


  // trigger render
  draw();
    

</script>


<script>
//aws data visualizations 

function opn(evt, menuItem) {
  var tabcontent = document.getElementsByClassName("content");
  for (var i = 0; i < tabcontent.length; i ++) {
    if (tabcontent[i].className === "content") {
      tabcontent[i].className += " hide"
    }
    if (tabcontent[i].id === menuItem) {
      tabcontent[i].className = "content"
    }
  }

  evt.currentTarget.className += " active";
}

  var acc = document.getElementsByClassName("tags");
  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
        } else {
            panel.style.display = "block";
        }
    });
  }

  var durationAndStats = document.getElementsByClassName("tagFunction");
  for (i = 0; i < durationAndStats.length; i++) {
    durationAndStats[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
        } else {
            panel.style.display = "block";
        }
    });
  }

  var durationAndStats = document.getElementsByClassName("functions");
  for (i = 0; i < durationAndStats.length; i++) {
    durationAndStats[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
        } else {
            panel.style.display = "block";
        }
    });
  }

</script>
</body>
</html>

